@page "/"
@using BudgetBuddy.Database.Enums
@using ValueType = Syncfusion.Blazor.Charts.ValueType
@inherits CustomComponentBase

<HeadContent>
    <Cache CacheKey="Home_Resources" Expiration="TimeSpan.FromHours(10)">
        <link href="/dist/home/home.css" />
    </Cache>
</HeadContent>

<div class="pb-20">
    <div class="flex flex-col lg:flex-row gap-4 p-2 lg:p-6">
        <div class="w-full lg:w-1/2 flex flex-col lg:gap-8">
            <div class="w-full">
                <Container From="Container.ScreenSize.Large" CssClasses="flex justify-center items-center h-[250px] lg:h-[300px]">
                    <SfAccumulationChart @ref="_sfAccumulationChart" EnableAnimation="true"
                                         Width="100%" Height="100%"
                                         Theme="@Theme.Tailwind3Dark"
                                         Background="Transparent"
                                         EnableBorderOnMouseMove="false"
                                         EnableSmartLabels="false">
                        <AccumulationChartBorder Color="Transparent"/>
                        <AccumulationChartTooltipSettings Enable="true" Format="${point.x}" EnableHighlight="true"/>
                        <AccumulationChartSeriesCollection>
                            <AccumulationChartSeries DataSource="@ChartData"
                                                     Radius="95%" InnerRadius="65%"
                                                     XName="Tooltip" YName="Percentage"
                                                     Palettes="@_colourPalette"
                                                     StartAngle="270" EndAngle="270">
                                <AccumulationDataLabelSettings Visible="true" Name="Title" Position="AccumulationLabelPosition.Outside">
                                    <AccumulationChartConnector Length="5px" Type="ConnectorType.Curve" Color="Transparent"/>
                                    <AccumulationChartDataLabelFont Color="Transparent"/>
                                </AccumulationDataLabelSettings>
                            </AccumulationChartSeries>
                        </AccumulationChartSeriesCollection>
                        <AccumulationChartLegendSettings Visible="false" Position="LegendPosition.Top" Background="transparent" EnableHighlight="true">
                            <AccumulationChartLegendFont Color="white" Size="8px" TextAlignment="Alignment.Center"></AccumulationChartLegendFont>
                        </AccumulationChartLegendSettings>
                    </SfAccumulationChart>
                </Container>

                <Container To="Container.ScreenSize.Large">
                    <SfChart Width="90%" Height="200px" Theme="@Theme.Tailwind3Dark" Background="Transparent">
                        <ChartTitleStyle TextOverflow="TextOverflow.Wrap"></ChartTitleStyle>
                        <ChartSubTitleStyle TextOverflow="TextOverflow.Wrap"></ChartSubTitleStyle>
                        <ChartArea>
                            <ChartAreaBorder Width="0"></ChartAreaBorder>
                        </ChartArea>
                        <ChartMargin Bottom="12"></ChartMargin>

                        <ChartPrimaryXAxis ValueType="ValueType.Category"
                                           LabelIntersectAction="LabelIntersectAction.MultipleRows"
                                           LabelPlacement="LabelPlacement.OnTicks">
                            <ChartAxisLabelStyle TextAlignment="Alignment.Center"></ChartAxisLabelStyle>
                            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                        </ChartPrimaryXAxis>
                        <ChartPrimaryYAxis Minimum="0" Maximum="Math.Ceiling(BarChartData.Max(x => x.Count) / 100.0m) * 100" Interval="(double)(Math.Ceiling(BarChartData.Max(x => x.Count) / 100.0m) * 100) * 0.2" Visible="true">
                            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                            <ChartAxisLineStyle Color="transparent"></ChartAxisLineStyle>
                            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle> <!-- hides labels if you don't want them -->
                        </ChartPrimaryYAxis>
                        <ChartTooltipSettings Enable="true" EnableHighlight="true" Header="<b>${series.name}</b>" Format="${point.x} : <b>${point.y}</b>"></ChartTooltipSettings>
                        <ChartLegendSettings Visible="false" ShapeHeight="9" ShapeWidth="9" EnableHighlight="true"></ChartLegendSettings>

                        <ChartSeriesCollection>
                            <ChartSeries DataSource="@BarChartData" XName="Title" YName="Count" PointColorMapping="Colour" Width="10" ColumnSpacing="0" Type="ChartSeriesType.Bar" LegendShape="LegendShape.Rectangle" CornerRadius="@(new ChartCornerRadius { BottomRight = 4, TopRight = 4 })">
                                <ChartMarker>
                                    <ChartDataLabel Visible="false" Position="LabelPosition.Middle">
                                        <ChartDataLabelFont FontWeight="1000" Color="#ffffff"></ChartDataLabelFont>
                                    </ChartDataLabel>
                                </ChartMarker>
                            </ChartSeries>
                        </ChartSeriesCollection>
                    </SfChart>
                </Container>
            </div>

            <div class="grid grid-cols-2 gap-3">

                <div class="col-span-2 flex flex-col items-center bg-white border border-gray-200 shadow-sm rounded-md dark:bg-neutral-900 dark:border-neutral-800 dark:shadow-neutral-800/70">
                    <div class="m-2 p-2 text-center">
                        <p class="text-gray-400 text-[10px]">BALANCE</p>
                        <h6 class="text-blue-400 font-bold text-sm flex items-center justify-center">
                            <div class="w-5 h-5 rounded-full bg-blue-500/10 flex items-center justify-center me-2">
                                <i data-lucide="wallet" class="w-3 h-3 text-blue-400"></i>
                            </div>
                            @((TotalIncome - TotalOutcome).ToString("£#,0.00"))
                        </h6>
                    </div>
                </div>


                <div class="flex flex-col bg-white border border-gray-200 shadow-sm rounded-md dark:bg-neutral-900 dark:border-neutral-800 dark:shadow-neutral-800/70">
                    <div class="m-2 p-2">
                        <p class="text-gray-400 text-[10px]">INCOME</p>
                        <h6 class="text-green-400 font-bold text-sm flex items-center">
                            <div class="w-6 h-6 rounded-full bg-green-500/10 flex items-center justify-center me-2">
                                <i data-lucide="trending-up" class="w-3 h-3 text-green-400"></i>
                            </div>
                            @TotalIncome.ToString("£#,0.00")
                        </h6>
                    </div>
                </div>

                <div class="flex flex-col bg-white border border-gray-200 shadow-sm rounded-md dark:bg-neutral-900 dark:border-neutral-800 dark:shadow-neutral-800/70">
                    <div class="m-2 p-2">
                        <p class="text-gray-400 text-[10px]">OUTCOME</p>
                        <h6 class="text-red-400 font-bold text-sm flex items-center">
                            <div class="w-5 h-5 rounded-full bg-red-500/10 flex items-center justify-center me-2">
                                <i data-lucide="trending-down" class="w-3 h-3 text-red-400"></i>
                            </div>
                            @TotalOutcome.ToString("£#,0.00")
                        </h6>
                    </div>
                </div>

            </div>
        </div>


        <div class="w-full lg:w-1/2">
            <h5 class="my-4 font-bold">Transactions (@Transactions.Count)</h5>

            @foreach (var transaction in Transactions.OrderByDescending(x => x.Type == TransactionType.Income).ThenByDescending(x => x.TransactionDate))
            {
                <div class="mb-3 relative">
                    <div class="bg-white border border-gray-200 shadow-sm rounded-md dark:bg-neutral-900 dark:border-neutral-800 dark:shadow-neutral-800/70">
                        <div class="p-3">
                            <div class="flex items-center justify-between gap-3">

                                <!-- Left: Icon and Details -->
                                <div class="flex items-start gap-3 text-sm">
                                    @switch (transaction.Type)
                                    {
                                        case TransactionType.Income:
                                            <div class="w-8 h-8 rounded-full bg-green-500/10 flex items-center justify-center">
                                                <i data-lucide="arrow-big-up" class="w-5 h-5 text-green-400"></i>
                                            </div>
                                            break;
                                        case TransactionType.Outcome:
                                            <div class="w-8 h-8 rounded-full bg-red-500/10 flex items-center justify-center">
                                                <i data-lucide="arrow-big-down" class="w-5 h-5 text-red-400"></i>
                                            </div>
                                            break;
                                        case TransactionType.Pending:
                                            <div class="w-8 h-8 rounded-full bg-yellow-500/10 flex items-center justify-center">
                                                <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 16 16">
                                                    <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
                                                </svg>
                                            </div>
                                            break;
                                    }

                                    <div class="flex flex-col justify-center">
                                        <span class="font-semibold leading-tight">@transaction.Name</span>
                                        <div class="items-center space-x-1 text-gray-400 text-xs hidden md:flex">
                                            @if (transaction.Category != CategoryEnum.None)
                                            {
                                                <span>@transaction.Category.ToString()</span>
                                            }

                                            @if (transaction.Category != CategoryEnum.None && transaction.TransactionDate.HasValue)
                                            {
                                                <span class="w-1 h-1 bg-gray-400 rounded-full"></span>
                                            }

                                            @if (transaction.TransactionDate.HasValue)
                                            {
                                                <span>@transaction.TransactionDate.Value.ToString("dd MMMM yyyy")</span>
                                            }
                                        </div>

                                        @if (transaction.Category != CategoryEnum.None)
                                        {
                                            <span class="text-gray-400 text-xs flex md:hidden">@transaction.Category.ToString()</span>
                                        }

                                        @if (transaction.TransactionDate.HasValue)
                                        {
                                            <span class="text-gray-400 text-xs flex md:hidden">@transaction.TransactionDate.Value.ToString("dd MMMM yyyy")</span>
                                        }
                                    </div>
                                </div>

                                <!-- Right: Amount and Dropdown -->
                                <div class="flex items-center gap-2 text-sm relative">
                                    @switch (transaction.Type)
                                    {
                                        case TransactionType.Income:
                                            <span class="text-green-400 font-bold">@transaction.Price.ToString("£#,0.00")</span>
                                            break;
                                        case TransactionType.Outcome:
                                            <span class="text-red-400 font-bold">@transaction.Price.ToString("£#,0.00")</span>
                                            break;
                                        case TransactionType.Pending:
                                            <span class="text-yellow-400 font-bold">@transaction.Price.ToString("£#,0.00")</span>
                                            break;
                                    }

                                    <div class="hs-dropdown relative inline-flex">
                                        <button id="hs-dropdown-trigger-@(transaction.Id)" type="button" class="hs-dropdown-toggle flex justify-center items-center size-9 text-sm font-semibold rounded-lg bg-white text-gray-800 shadow-2xs hover:bg-gray-50 focus:outline-hidden focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:text-white dark:hover:bg-neutral-800 dark:focus:bg-neutral-800" aria-haspopup="menu" aria-expanded="false" aria-label="Dropdown">
                                            <svg class="flex-none size-4 text-gray-600 dark:text-neutral-500" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <circle cx="12" cy="12" r="1"/><circle cx="12" cy="5" r="1"/><circle cx="12" cy="19" r="1"/>
                                            </svg>
                                        </button>

                                        <div class="hs-dropdown-menu transition-[opacity,margin] duration hs-dropdown-open:opacity-100 opacity-0 hidden min-w-60 bg-white shadow-md rounded-lg mt-2 dark:bg-neutral-800 dark:border dark:border-neutral-700 z-50" role="menu" aria-orientation="vertical" aria-labelledby="hs-dropdown-trigger-@(transaction.Id)">
                                            <div class="p-1 space-y-0.5">
                                                <a @onclick="() => OpenTransactionModal(transaction.Id)" class="flex items-center gap-x-2 py-2 px-3 rounded-lg cursor-pointer text-sm text-gray-800 hover:bg-gray-100 focus:outline-hidden focus:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700">
                                                    <i data-lucide="pencil" class="w-4 h-4"></i>
                                                    Edit
                                                </a>
                                                <a @onclick="() => Delete(transaction.Id)" class="flex items-center gap-x-2 py-2 px-3 rounded-lg cursor-pointer text-sm text-red-800 hover:bg-gray-100 focus:outline-hidden focus:bg-gray-100 dark:text-red-400 dark:hover:bg-neutral-700 dark:hover:text-red-300 dark:focus:bg-neutral-700">
                                                    <i data-lucide="trash-2" class="w-4 h-4"></i>
                                                    Delete
                                                </a>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<button @onclick="() => OpenTransactionModal(Guid.Empty)"
        class="fixed bottom-20 right-6 z-60 h-16 w-16 rounded-full bg-blue-600 shadow-xl transition hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-blue-500 dark:hover:bg-blue-400 dark:focus:ring-blue-300 flex items-center justify-center"
        aria-label="Add">
    <svg class="h-8 w-8 text-white" fill="none" stroke="currentColor" stroke-width="2"
         viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"></path>
    </svg>
</button>


<Modal @ref="_transactionModal" Title="Create Transaction" Size="Modal.ModalSize.Large" VerticalAlignment="Modal.ModalVerticalAlignment.Top">
    <Body>
    <EditForm Model="@_transactionModel" OnValidSubmit="SaveTransaction">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <input type="hidden" @bind="_transactionModel.Id"/>

        <div class="flex flex-col items-center justify-center space-y-6 sm:space-y-5 px-4">

            <div class="max-w-md w-full space-y-3">
                <label for="transaction_name" class="block text-sm font-medium mb-2 dark:text-white">Name</label>
                <input type="text" id="transaction_name" @bind="_transactionModel.Name" class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600" placeholder="">
            </div>

            <div class="max-w-md w-full space-y-3">
                <label for="transaction_description" class="block text-sm font-medium mb-2 dark:text-white">Description</label>
                <textarea id="transaction_description" @bind="_transactionModel.Description" class="py-2 px-3 sm:py-3 sm:px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600" rows="3" placeholder=""></textarea>
            </div>

            <div class="max-w-md w-full space-y-3">
                <div>
                    <label for="transaction_price" class="block text-sm font-medium mb-2 dark:text-white">Price</label>
                    <div class="relative">
                        <input type="text" id="transaction_price" @bind="_transactionModel.Price" class="py-2.5 sm:py-3 px-4 ps-9 pe-16 block w-full border-gray-200 rounded-lg sm:text-sm focus:z-10 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600" placeholder="">
                        <div class="absolute inset-y-0 start-0 flex items-center pointer-events-none z-20 ps-4">
                            <span class="text-gray-500 dark:text-neutral-500">£</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="max-w-md w-full space-y-3">
                <label for="transaction_date" class="sr-only">Date</label>
                <div class="relative">
                    <input id="transaction_date" type="text" @bind="_transactionModel.TransactionDate" data-datepicker placeholder="Pick a date" class="py-3 px-4 pe-10 block w-full border-gray-200 rounded-lg sm:text-sm placeholder:text-gray-400 focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-transparent dark:border-neutral-700 dark:text-neutral-300 dark:placeholder:text-white/60 dark:focus:ring-neutral-600" />
                    <div class="absolute inset-y-0 end-0 flex items-center z-20 px-3 pointer-events-none">
                        <i data-lucide="calendar" class="size-3.5 text-gray-400 dark:text-neutral-600"></i>
                    </div>
                </div>
            </div>

            <div class="max-w-md w-full space-y-3">
                <label for="transaction_type" class="block text-sm font-medium mb-2 dark:text-white">Type</label>
                <select id="transaction_type" @bind="_transactionModel.Type" class="py-3 px-4 pe-9 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600">
                    <option value="@(TransactionType.Unknown)" selected="">-- Please Select --</option>
                    <option value="@(TransactionType.Income)">Income</option>
                    <option value="@(TransactionType.Outcome)">Outcome</option>
                </select>
            </div>

            @if (_transactionModel.Type == TransactionType.Outcome)
            {
                <div class="max-w-md w-full space-y-3">
                    <label for="transaction_category" class="block text-sm font-medium mb-2 dark:text-white">Category</label>
                    <select id="transaction_category" @bind="_transactionModel.Category" class="py-3 px-4 pe-9 block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600">
                        <option value="@(CategoryEnum.None)" selected="">-- Please Select --</option>
                        <option value="@(CategoryEnum.Bills)">Bills</option>
                        <option value="@(CategoryEnum.Shopping)">Shopping</option>
                        <option value="@(CategoryEnum.Groceries)">Groceries</option>
                        <option value="@(CategoryEnum.Entertainment)">Entertainment</option>
                        <option value="@(CategoryEnum.Activities)">Activities</option>
                        <option value="@(CategoryEnum.Travel)">Travel</option>
                        <option value="@(CategoryEnum.PaymentsAndTransfers)">Payments and Transfers</option>
                        <option value="@(CategoryEnum.Other)">Other</option>
                    </select>
                </div>
            }

            @*
               <div class="max-w-md w-full space-y-3">
                   <label for="transaction_rank" class="block text-sm font-medium mb-2 dark:text-white">Rank</label>
                   <input type="number" id="transaction_rank" @bind="_transactionModel.Rank" class="py-2.5 sm:py-3 px-4 block w-full border-gray-200 rounded-lg sm:text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600" placeholder="you@site.com">
               </div>  
            *@

            <div class="max-w-md w-full">
                <div class="flex justify-end gap-2">
                    <button @onclick="_transactionModal.Close" class="px-4 py-2 text-sm font-medium bg-gray-100 dark:bg-neutral-700 dark:text-white rounded-lg hover:bg-gray-200 dark:hover:bg-neutral-600">Close</button>
                    <button class="px-4 py-2 text-sm font-medium bg-blue-600 text-white rounded-lg hover:bg-blue-700" type="submit">Save</button>
                </div>
            </div>
        </div>

    </EditForm>
    </Body>
</Modal>


@*
<div class="w-full bg-white rounded-lg shadow-md dark:bg-neutral-800">
    <div class="hs-accordion-group">
        <div class="hs-accordion active" id="hs-basic-heading-one">
            <button class="hs-accordion-toggle hs-accordion-active:text-blue-600 px-6 py-3 inline-flex items-center gap-x-3 text-sm w-full font-semibold text-start text-gray-800 hover:text-gray-500 focus:outline-hidden focus:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-neutral-200 dark:hover:text-neutral-400 dark:focus:text-neutral-400" aria-expanded="true" aria-controls="hs-basic-collapse-one">
                <svg class="hs-accordion-active:hidden hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 block size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                    <path d="M12 5v14"></path>
                </svg>
                <svg class="hs-accordion-active:block hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 hidden size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                </svg>
                Accordion #1
            </button>
            <div id="hs-basic-collapse-one" class="hs-accordion-content w-full overflow-hidden transition-[height] duration-300" role="region" aria-labelledby="hs-basic-heading-one">
                <div class="pb-4 px-6">
                    <p class="text-sm text-gray-600 dark:text-neutral-200">
                        It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element.
                    </p>
                </div>
            </div>
        </div>

        <div class="hs-accordion" id="hs-basic-heading-two">
            <button class="hs-accordion-toggle hs-accordion-active:text-blue-600 px-6 py-3 inline-flex items-center gap-x-3 text-sm w-full font-semibold text-start text-gray-800 hover:text-gray-500 focus:outline-hidden focus:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-neutral-200 dark:hover:text-neutral-400 dark:focus:text-neutral-400" aria-expanded="false" aria-controls="hs-basic-collapse-two">
                <svg class="hs-accordion-active:hidden hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 block size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                    <path d="M12 5v14"></path>
                </svg>
                <svg class="hs-accordion-active:block hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 hidden size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                </svg>
                Accordion #2
            </button>
            <div id="hs-basic-collapse-two" class="hs-accordion-content hidden w-full overflow-hidden transition-[height] duration-300" role="region" aria-labelledby="hs-basic-heading-two">
                <div class="pb-4 px-6">
                    <p class="text-sm text-gray-600 dark:text-neutral-200">
                        It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element.
                    </p>
                </div>
            </div>
        </div>

        <div class="hs-accordion" id="hs-basic-heading-three">
            <button class="hs-accordion-toggle hs-accordion-active:text-blue-600 px-6 py-3 inline-flex items-center gap-x-3 text-sm w-full font-semibold text-start text-gray-800 hover:text-gray-500 focus:outline-hidden focus:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-neutral-200 dark:hover:text-neutral-400 dark:focus:text-neutral-400" aria-expanded="false" aria-controls="hs-basic-collapse-three">
                <svg class="hs-accordion-active:hidden hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 block size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                    <path d="M12 5v14"></path>
                </svg>
                <svg class="hs-accordion-active:block hs-accordion-active:text-blue-600 hs-accordion-active:group-hover:text-blue-600 hidden size-4 text-gray-600 group-hover:text-gray-500 dark:text-neutral-400" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                </svg>
                Accordion #3
            </button>
            <div id="hs-basic-collapse-three" class="hs-accordion-content hidden w-full overflow-hidden transition-[height] duration-300" role="region" aria-labelledby="hs-basic-heading-three">
                <div class="pb-4 px-6">
                    <p class="text-sm text-gray-600 dark:text-neutral-200">
                        It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
*@