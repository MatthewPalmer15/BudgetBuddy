@using Syncfusion.Blazor.Navigations
@inherits LayoutComponentBase
@inject NavigationManager UriHelper
@inject IJSRuntime JSRuntime


<div class="col-lg-12 appbar-control-section">
	<div class="default-appbar-container">
		<div class="row">
			<div class="col-md-12">
				@if (IsMobile)
				{
					<SfAppBar ColorMode="AppBarColor.Primary" Position="AppBarPosition.Bottom">
						<SfButton aria-label="menu" CssClass="e-inherit menu" IconCss="e-icons e-menu"></SfButton>
						<span class="regular">BudgetBuddy</span>
						<AppBarSpacer></AppBarSpacer>
						<SfButton CssClass="e - inherit login" Content="FREE TRIAL"></SfButton>
					</SfAppBar>
				}
				else
				{
					<SfAppBar ColorMode="AppBarColor.Primary" Position="AppBarPosition.Top">
						<SfButton aria-label="menu" CssClass="e-inherit menu" IconCss="e-icons e-menu"></SfButton>
						<span class="regular">BudgetBuddy</span>
						<AppBarSpacer></AppBarSpacer>
						<SfButton CssClass="e - inherit login" Content="FREE TRIAL"></SfButton>
						<AppBarSpacer></AppBarSpacer>
						<SfButton CssClass="e - inherit login" Content="FREE TRIAL"></SfButton>
						<AppBarSpacer></AppBarSpacer>
						<SfButton CssClass="e - inherit login" Content="FREE TRIAL"></SfButton>
					</SfAppBar>
				}
			</div>
		</div>
	</div>
</div>

@Body

@code
{
	private bool IsMobile { get; set; }
	private bool IsDarkMode { get; set; }

	protected override async Task OnInitializedAsync()
	{
		IsMobile = DeviceInfo.Platform == DevicePlatform.iOS || DeviceInfo.Platform == DevicePlatform.Android;

		switch (AppInfo.RequestedTheme)
		{
			case AppTheme.Dark:
				IsDarkMode = true;
				break;

			case AppTheme.Light:
				IsDarkMode = false;
				break;

			default:
				IsDarkMode = (await JSRuntime.InvokeAsync<string>("eval", @"(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')")).ToLower() == "dark";
				break;
		}

		await JSRuntime.InvokeVoidAsync("eval", @"document.body.classList.add('" + (IsDarkMode ? "bg-dark" : "bg-light") + "');");
		await JSRuntime.InvokeVoidAsync("eval", @"document.body.classList.add('" + (IsDarkMode ? "text-light" : "text-dark") + "');");
	}
}